<Project>

  <PropertyGroup>
    <!--<AllowUnsafeBlocks Condition="'$(Tfm)' == 'netstandard2.0' or '$(TfmId)' == '.NETFramework'">true</AllowUnsafeBlocks>-->
    <TargetTextJsonVersion Condition="'$(TargetTextJsonVersion)' == ''">$(TargetTextJsonVersionFallback)</TargetTextJsonVersion>
  </PropertyGroup>

  <ItemGroup Label="Build">
    <!--<Using Include="System.Console" Static="true" />-->
    <Using Include="System.Dynamic.DynamicMetaObject" Alias="dobject" />
    <Using Include="System.Linq.Expressions.Expression" Alias="E" />
    <Using Include="System.Text.Json.JsonElement.ObjectEnumerator" Alias="ObjectEnumerator" />
    <Using Include="System.Text.Json.JsonElement.ArrayEnumerator" Alias="ArrayEnumerator" />
    <InternalsVisibleTo Include="$(RootNamespace).Tests" />
    <RemoveXmlDocPrefix Include=":Alba.Text.Json.Dynamic.ExpressionExts." />
    <RemoveXmlDocPrefix Include=":Alba.Text.Json.Dynamic.RefImpl." />
  </ItemGroup>

  <ItemGroup Condition="'$(IsTextJsonVersionSpecific)' == 'true'">
    <Compile Update="@(Compile)" Visible="false" />
    <Content Update="@(Content)" Visible="false" />
    <Folder Update="@(Folder)" Visible="false" />
    <None Update="@(None)" Visible="false" />
  </ItemGroup>

  <ItemGroup Label="Polyfills">
    <!--<PolySystem Include="Range;Index" />-->
    <PolyAnalysis Include="DynamicallyAccessedMemberTypes" />
    <PolyAnalysisAttributes Include="Maybe0;Maybe0W;1;1If1;1W" />
    <PolyAnalysisAttributes Include="DynamicallyAccessedMembers;RequiresDynamicCode;RequiresUnreferencedCode;StringSyntax;UnscopedRef" />
    <PolyCompilerAttributes Include="CallerArgumentExpression" />
  </ItemGroup>

  <ItemGroup Label="References">
    <PackageReference Include="Microsoft.Bcl.Memory"
        Condition="'$(TfmId)' == '.NETFramework' or '$(Tfm)' == 'netstandard2.0'" />
    <PackageReference Include="System.Text.Json" VersionOverride="$(TargetTextJsonVersion).0.0"
        Condition="'$(Tfm)' != 'net$(TargetTextJsonVersion).0'" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Release'">
    <Compile Remove="RefImpl/*.cs" />
  </ItemGroup>

  <!-- DOC: Package metadata -->
  <PropertyGroup>
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">0.1.0</VersionPrefix>
    <MainVersionSuffix>alpha</MainVersionSuffix>
    <VersionSuffix Condition="'$(VersionSuffix)' == ''">$(MainVersionSuffix)</VersionSuffix>
    <VersionSuffix Condition="$(VersionSuffix.StartsWith('preview'))">$(VersionSuffix.Replace('preview', $(MainVersionSuffix)))</VersionSuffix>
    <PackageReleaseNotes Condition="'$(ReleaseUrl)' != ''">See $(ReleaseUrl) for more information</PackageReleaseNotes>
    <DescriptionPackageShared>
      Dynamic JsonNode: dynamic json = JNode.Parse("""{ "Hello": { "World": [ 1, 2, 3 ] } }"""); json.Hello.World[2]++.
    </DescriptionPackageShared>
    <DescriptionPackageSpecific Condition="'$(IsTextJsonVersionSpecific)' != 'true'">
      Alba.Text.Json.Dynamic package supports a System.Text.Json version bundled with the .NET version (or latest compatible for .NET Standard and .NET Framework).
      To support a specific System.Text.Json version, use Alba.Text.Json.Dynamic.STJ# package.
    </DescriptionPackageSpecific>
    <DescriptionPackageSpecific Condition="'$(IsTextJsonVersionSpecific)' == 'true'">
      Alba.Text.Json.Dynamic.STJ$(TargetTextJsonVersion) package supports System.Text.Json version $(TargetTextJsonVersion).
      To support a System.Text.Json version based on .NET version, use Alba.Text.Json.Dynamic package.
    </DescriptionPackageSpecific>
  </PropertyGroup>

  <ItemGroup>
    <PackageTagItem Include="JSON;JsonNode;dynamic;DLR;System.Text.Json;STJ" />
    <PackageTagItem Condition="'$(TargetTextJsonVersion)' != ''" Include="STJ$(TargetTextJsonVersion)" />
  </ItemGroup>

</Project>