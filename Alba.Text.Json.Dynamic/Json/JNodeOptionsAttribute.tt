<#@   template debug="true" hostspecific="true" language="C#"
#><#@ output extension=".g.cs"
#><#@ include file="$(ProjectDir)CodeGen/Tpl.Usings.ttinclude"
#><#  #nullable enable
#><#
var path = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), "JNodeOptions.cs");
var text = File.ReadAllText(Host.ResolvePath(path), Encoding.UTF8);
var props = text.ReMatchOne(@"(?s)#pragma t4 copy begin\s+(.*)\s+#pragma t4 copy end")!
    .Replace("\r", "").Split('\n')
    .Select(s => s.Trim())
    .Where(s => s != "" && !s.StartsWith("//"))
    .Select(s => (
        Def: s.ReMatchOne(@"(^.* {[^}]+})")!,
        Name: s.ReMatchOne(@"([\w\d]+) {")!,
        Copy: s.Contains("[") ? ".ToArray()" : ""
    ))
    .ToList();
#>
#nullable enable

namespace Alba.Text.Json.Dynamic;

public partial class JNodeOptionsAttribute
{
<# foreach (var p in props) { #>
    /// <inheritdoc cref="JNodeOptions.<#=p.Name#>" />
    <#=p.Def#> = JNodeOptions.Default.<#=p.Name#><#=p.Copy#>;

<# } #>
    /// <summary>Convert to a <see cref="JNodeOptions"/> instance by copying all property values.</summary>
    public JNodeOptions ToOptions() => new() {
<# foreach (var p in props) { #>
        <#=p.Name#> = <#=p.Name#><#=p.Copy#>,
<# } #>
    };
}<# #nullable disable #>